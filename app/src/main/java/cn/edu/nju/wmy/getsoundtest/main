/**
 * @author : VingtDylan
 * @date : 2020/2/29
 * @time : 15:58
 * @description : keep it simple and stupid!
 */

import  javax.swing.JFrame;

public class Main {
    public static void main(String []args){
        String filename = "C:/Users/ASUS/Desktop/demo14.wav";
        MusicUtil offlineMusic = new MusicUtil(filename);
        /*offlineMusic.AudioInfo();*/
        if(offlineMusic.isSuccess()){
            /*System.out.println(offlineMusic.getDataLen());*/
            //ShowSample(offlineMusic,filename);
            // 数据转换
            int dataLen = offlineMusic.getDataLen();
            int []originLY = offlineMusic.getData()[0];
            int []originRY = offlineMusic.getData()[1];
            double []LY = new double[dataLen];
            double []RY = new double[dataLen];
            for(int i = 0; i < dataLen; i++){
                LY[i] = originLY[i]/32768.0;
                RY[i] = originRY[i]/32768.0;
            }
            // 获取过滤后的数据,并提取有效信号
            int Unit = 400;int m = 10;
            Filter offlineFilter = new Filter(LY,RY,6,(double)offlineMusic.getSampleRate(),4000);
            offlineFilter.filter(Unit, m);
            LY = offlineFilter.getLY();
            RY = offlineFilter.getRY();

            int size = 2048;
            Tdoa tdoa = new Tdoa(LY,RY,size);
            System.out.print(tdoa.getDeltaT() * 44100+"\n");
            System.out.print(tdoa.getDeltaT()+"\n");
            System.out.print("Distance = "+tdoa.getDeltaT()*34000+"cm\n");
            System.out.print(tdoa.getSign()+"\n");

            /* 测试代码
            int f0=10;
            int fs=150;
            int lag = 4;
            int dataLength = 16;
            double[] s1 = new double[dataLength];
            double[] s2 = new double[dataLength];

            for(int i=0;i<dataLength;i++) {
                s1[i] = (double) Math.sin(2*3.14159*f0*i/fs);
                s2[i] = (double) Math.sin(2*3.14159*f0*(i-lag)/fs);
                //System.out.println("s1["+i+"]："+s1[i]+" ; s2["+i+"]："+s2[i]);
            }
            Correlation correlation = new Correlation(s1, s2);
            System.out.println("结果："+correlation.getLag());*/
        }
    }

    public static void ShowSample(MusicUtil offlineMusic,String filename){
        int []originL = offlineMusic.getData()[0];
        int []originR = offlineMusic.getData()[1];
        int st=10000;
        int ed=10100;
        int []data1 = Util.SubArray(originL,st,ed);
        int []data2 = Util.SubArray(originR,st,ed);
        JFrame frame = new JFrame();
        DrawPannel drawPanel = new DrawPannel(data1,data2);
        frame.add(drawPanel);
        frame.setTitle(filename);
        frame.setSize(1000, 400);
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }
}
